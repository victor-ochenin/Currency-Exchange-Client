name: Simple Code Review

on:
  push:
    branches: [ main, develop ]

jobs:
  review:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Create Review Issue
      uses: actions/github-script@v7
      with:
        script: |
          const commit = context.payload.head_commit;
          if (!commit) {
            console.log('No commit information available');
            return;
          }
          
          const added = commit.added || [];
          const modified = commit.modified || [];
          const removed = commit.removed || [];
          const files = added.concat(modified).concat(removed);
          
          const comment = `## ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π Code Review
          
          **üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–º–∏—Ç–µ:**
          - **ID:** \`${commit.id ? commit.id.substring(0, 7) : 'N/A'}\`
          - **–ê–≤—Ç–æ—Ä:** ${commit.author ? commit.author.name : 'Unknown'}
          - **–°–æ–æ–±—â–µ–Ω–∏–µ:** ${commit.message || 'No message'}
          - **–í—Ä–µ–º—è:** ${commit.timestamp ? new Date(commit.timestamp).toLocaleString('ru-RU') : 'N/A'}
          
          **üìÅ –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:**
          ${files.length > 0 ? files.map(file => `- \`${file}\``).join('\n') : '- –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤'}
          
          **‚úÖ –°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–æ–∫:**
          - ESLint: –ü—Ä–æ–π–¥–µ–Ω
          - Build: –£—Å–ø–µ—à–Ω–æ
          - –§–∞–π–ª–æ–≤ –∏–∑–º–µ–Ω–µ–Ω–æ: ${files.length}
          
          **üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è review:**
          - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π
          - –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ console.log –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
          - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
          - –î–æ–±–∞–≤—å—Ç–µ —Ç–µ—Å—Ç—ã –¥–ª—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
          - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
          
          **üîç –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å AI –¥–ª—è review:**
          1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∏–∑ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
          2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Cursor AI (Ctrl+K) –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
          3. –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã: "Review this code for potential issues"
          4. –û–±–Ω–æ–≤–∏—Ç–µ —ç—Ç–æ—Ç Issue —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ review
          
          ---
          *–≠—Ç–æ—Ç Issue —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ push –≤ main –≤–µ—Ç–∫—É*`;
          
          // –°–æ–∑–¥–∞–µ–º Issue –¥–ª—è review
          const title = commit.message ? 
            `üîç Code Review: ${commit.message.split('\n')[0]}` : 
            'üîç Code Review: Automatic Review';
            
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: comment,
            labels: ['code-review', 'automated', 'needs-review']
          });
